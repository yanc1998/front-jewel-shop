{"ast":null,"code":"'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar fs = require('../fs');\n\nvar path = require('path');\n\nvar util = require('util');\n\nvar atLeastNode = require('at-least-node');\n\nvar nodeSupportsBigInt = atLeastNode('10.5.0');\n\nvar stat = function stat(file) {\n  return nodeSupportsBigInt ? fs.stat(file, {\n    bigint: true\n  }) : fs.stat(file);\n};\n\nvar statSync = function statSync(file) {\n  return nodeSupportsBigInt ? fs.statSync(file, {\n    bigint: true\n  }) : fs.statSync(file);\n};\n\nfunction getStats(src, dest) {\n  return Promise.all([stat(src), stat(dest)[\"catch\"](function (err) {\n    if (err.code === 'ENOENT') return null;\n    throw err;\n  })]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        srcStat = _ref2[0],\n        destStat = _ref2[1];\n\n    return {\n      srcStat: srcStat,\n      destStat: destStat\n    };\n  });\n}\n\nfunction getStatsSync(src, dest) {\n  var destStat;\n  var srcStat = statSync(src);\n\n  try {\n    destStat = statSync(dest);\n  } catch (err) {\n    if (err.code === 'ENOENT') return {\n      srcStat: srcStat,\n      destStat: null\n    };\n    throw err;\n  }\n\n  return {\n    srcStat: srcStat,\n    destStat: destStat\n  };\n}\n\nfunction checkPaths(src, dest, funcName, cb) {\n  util.callbackify(getStats)(src, dest, function (err, stats) {\n    if (err) return cb(err);\n    var srcStat = stats.srcStat,\n        destStat = stats.destStat;\n\n    if (destStat && areIdentical(srcStat, destStat)) {\n      return cb(new Error('Source and destination must not be the same.'));\n    }\n\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)));\n    }\n\n    return cb(null, {\n      srcStat: srcStat,\n      destStat: destStat\n    });\n  });\n}\n\nfunction checkPathsSync(src, dest, funcName) {\n  var _getStatsSync = getStatsSync(src, dest),\n      srcStat = _getStatsSync.srcStat,\n      destStat = _getStatsSync.destStat;\n\n  if (destStat && areIdentical(srcStat, destStat)) {\n    throw new Error('Source and destination must not be the same.');\n  }\n\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName));\n  }\n\n  return {\n    srcStat: srcStat,\n    destStat: destStat\n  };\n} // recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\n\n\nfunction checkParentPaths(src, srcStat, dest, funcName, cb) {\n  var srcParent = path.resolve(path.dirname(src));\n  var destParent = path.resolve(path.dirname(dest));\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb();\n\n  var callback = function callback(err, destStat) {\n    if (err) {\n      if (err.code === 'ENOENT') return cb();\n      return cb(err);\n    }\n\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)));\n    }\n\n    return checkParentPaths(src, srcStat, destParent, funcName, cb);\n  };\n\n  if (nodeSupportsBigInt) fs.stat(destParent, {\n    bigint: true\n  }, callback);else fs.stat(destParent, callback);\n}\n\nfunction checkParentPathsSync(src, srcStat, dest, funcName) {\n  var srcParent = path.resolve(path.dirname(src));\n  var destParent = path.resolve(path.dirname(dest));\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return;\n  var destStat;\n\n  try {\n    destStat = statSync(destParent);\n  } catch (err) {\n    if (err.code === 'ENOENT') return;\n    throw err;\n  }\n\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName));\n  }\n\n  return checkParentPathsSync(src, srcStat, destParent, funcName);\n}\n\nfunction areIdentical(srcStat, destStat) {\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    if (nodeSupportsBigInt || destStat.ino < Number.MAX_SAFE_INTEGER) {\n      // definitive answer\n      return true;\n    } // Use additional heuristics if we can't use 'bigint'.\n    // Different 'ino' could be represented the same if they are >= Number.MAX_SAFE_INTEGER\n    // See issue 657\n\n\n    if (destStat.size === srcStat.size && destStat.mode === srcStat.mode && destStat.nlink === srcStat.nlink && destStat.atimeMs === srcStat.atimeMs && destStat.mtimeMs === srcStat.mtimeMs && destStat.ctimeMs === srcStat.ctimeMs && destStat.birthtimeMs === srcStat.birthtimeMs) {\n      // heuristic answer\n      return true;\n    }\n  }\n\n  return false;\n} // return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\n\n\nfunction isSrcSubdir(src, dest) {\n  var srcArr = path.resolve(src).split(path.sep).filter(function (i) {\n    return i;\n  });\n  var destArr = path.resolve(dest).split(path.sep).filter(function (i) {\n    return i;\n  });\n  return srcArr.reduce(function (acc, cur, i) {\n    return acc && destArr[i] === cur;\n  }, true);\n}\n\nfunction errMsg(src, dest, funcName) {\n  return \"Cannot \".concat(funcName, \" '\").concat(src, \"' to a subdirectory of itself, '\").concat(dest, \"'.\");\n}\n\nmodule.exports = {\n  checkPaths: checkPaths,\n  checkPathsSync: checkPathsSync,\n  checkParentPaths: checkParentPaths,\n  checkParentPathsSync: checkParentPathsSync,\n  isSrcSubdir: isSrcSubdir\n};","map":{"version":3,"names":["fs","require","path","util","atLeastNode","nodeSupportsBigInt","stat","file","bigint","statSync","getStats","src","dest","Promise","all","err","code","then","srcStat","destStat","getStatsSync","checkPaths","funcName","cb","callbackify","stats","areIdentical","Error","isDirectory","isSrcSubdir","errMsg","checkPathsSync","checkParentPaths","srcParent","resolve","dirname","destParent","parse","root","callback","checkParentPathsSync","ino","dev","Number","MAX_SAFE_INTEGER","size","mode","nlink","atimeMs","mtimeMs","ctimeMs","birthtimeMs","srcArr","split","sep","filter","i","destArr","reduce","acc","cur","module","exports"],"sources":["/Users/yancarlos/Documents/my Work/front-jewel-shop/node_modules/fs-extra/lib/util/stat.js"],"sourcesContent":["'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst util = require('util')\nconst atLeastNode = require('at-least-node')\n\nconst nodeSupportsBigInt = atLeastNode('10.5.0')\nconst stat = (file) => nodeSupportsBigInt ? fs.stat(file, { bigint: true }) : fs.stat(file)\nconst statSync = (file) => nodeSupportsBigInt ? fs.statSync(file, { bigint: true }) : fs.statSync(file)\n\nfunction getStats (src, dest) {\n  return Promise.all([\n    stat(src),\n    stat(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest) {\n  let destStat\n  const srcStat = statSync(src)\n  try {\n    destStat = statSync(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, cb) {\n  util.callbackify(getStats)(src, dest, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n    if (destStat && areIdentical(srcStat, destStat)) {\n      return cb(new Error('Source and destination must not be the same.'))\n    }\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName) {\n  const { srcStat, destStat } = getStatsSync(src, dest)\n  if (destStat && areIdentical(srcStat, destStat)) {\n    throw new Error('Source and destination must not be the same.')\n  }\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  const callback = (err, destStat) => {\n    if (err) {\n      if (err.code === 'ENOENT') return cb()\n      return cb(err)\n    }\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return checkParentPaths(src, srcStat, destParent, funcName, cb)\n  }\n  if (nodeSupportsBigInt) fs.stat(destParent, { bigint: true }, callback)\n  else fs.stat(destParent, callback)\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = statSync(destParent)\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  if (destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev) {\n    if (nodeSupportsBigInt || destStat.ino < Number.MAX_SAFE_INTEGER) {\n      // definitive answer\n      return true\n    }\n    // Use additional heuristics if we can't use 'bigint'.\n    // Different 'ino' could be represented the same if they are >= Number.MAX_SAFE_INTEGER\n    // See issue 657\n    if (destStat.size === srcStat.size &&\n        destStat.mode === srcStat.mode &&\n        destStat.nlink === srcStat.nlink &&\n        destStat.atimeMs === srcStat.atimeMs &&\n        destStat.mtimeMs === srcStat.mtimeMs &&\n        destStat.ctimeMs === srcStat.ctimeMs &&\n        destStat.birthtimeMs === srcStat.birthtimeMs) {\n      // heuristic answer\n      return true\n    }\n  }\n  return false\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}