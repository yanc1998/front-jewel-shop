{"ast":null,"code":"'use strict';\n\nvar u = require('universalify').fromCallback;\n\nvar fs = require('graceful-fs');\n\nvar path = require('path');\n\nvar mkdir = require('../mkdirs');\n\nvar remove = require('../remove');\n\nvar emptyDir = u(function emptyDir(dir, callback) {\n  callback = callback || function () {};\n\n  fs.readdir(dir, function (err, items) {\n    if (err) return mkdir.mkdirs(dir, callback);\n    items = items.map(function (item) {\n      return path.join(dir, item);\n    });\n    deleteItem();\n\n    function deleteItem() {\n      var item = items.pop();\n      if (!item) return callback();\n      remove.remove(item, function (err) {\n        if (err) return callback(err);\n        deleteItem();\n      });\n    }\n  });\n});\n\nfunction emptyDirSync(dir) {\n  var items;\n\n  try {\n    items = fs.readdirSync(dir);\n  } catch (_unused) {\n    return mkdir.mkdirsSync(dir);\n  }\n\n  items.forEach(function (item) {\n    item = path.join(dir, item);\n    remove.removeSync(item);\n  });\n}\n\nmodule.exports = {\n  emptyDirSync: emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir: emptyDir,\n  emptydir: emptyDir\n};","map":{"version":3,"names":["u","require","fromCallback","fs","path","mkdir","remove","emptyDir","dir","callback","readdir","err","items","mkdirs","map","item","join","deleteItem","pop","emptyDirSync","readdirSync","mkdirsSync","forEach","removeSync","module","exports","emptydirSync","emptydir"],"sources":["/Users/yancarlos/Documents/my Work/front-jewel-shop/node_modules/fs-extra/lib/empty/index.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst fs = require('graceful-fs')\nconst path = require('path')\nconst mkdir = require('../mkdirs')\nconst remove = require('../remove')\n\nconst emptyDir = u(function emptyDir (dir, callback) {\n  callback = callback || function () {}\n  fs.readdir(dir, (err, items) => {\n    if (err) return mkdir.mkdirs(dir, callback)\n\n    items = items.map(item => path.join(dir, item))\n\n    deleteItem()\n\n    function deleteItem () {\n      const item = items.pop()\n      if (!item) return callback()\n      remove.remove(item, err => {\n        if (err) return callback(err)\n        deleteItem()\n      })\n    }\n  })\n})\n\nfunction emptyDirSync (dir) {\n  let items\n  try {\n    items = fs.readdirSync(dir)\n  } catch {\n    return mkdir.mkdirsSync(dir)\n  }\n\n  items.forEach(item => {\n    item = path.join(dir, item)\n    remove.removeSync(item)\n  })\n}\n\nmodule.exports = {\n  emptyDirSync,\n  emptydirSync: emptyDirSync,\n  emptyDir,\n  emptydir: emptyDir\n}\n"],"mappings":"AAAA;;AAEA,IAAMA,CAAC,GAAGC,OAAO,CAAC,cAAD,CAAP,CAAwBC,YAAlC;;AACA,IAAMC,EAAE,GAAGF,OAAO,CAAC,aAAD,CAAlB;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,MAAD,CAApB;;AACA,IAAMI,KAAK,GAAGJ,OAAO,CAAC,WAAD,CAArB;;AACA,IAAMK,MAAM,GAAGL,OAAO,CAAC,WAAD,CAAtB;;AAEA,IAAMM,QAAQ,GAAGP,CAAC,CAAC,SAASO,QAAT,CAAmBC,GAAnB,EAAwBC,QAAxB,EAAkC;EACnDA,QAAQ,GAAGA,QAAQ,IAAI,YAAY,CAAE,CAArC;;EACAN,EAAE,CAACO,OAAH,CAAWF,GAAX,EAAgB,UAACG,GAAD,EAAMC,KAAN,EAAgB;IAC9B,IAAID,GAAJ,EAAS,OAAON,KAAK,CAACQ,MAAN,CAAaL,GAAb,EAAkBC,QAAlB,CAAP;IAETG,KAAK,GAAGA,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;MAAA,OAAIX,IAAI,CAACY,IAAL,CAAUR,GAAV,EAAeO,IAAf,CAAJ;IAAA,CAAd,CAAR;IAEAE,UAAU;;IAEV,SAASA,UAAT,GAAuB;MACrB,IAAMF,IAAI,GAAGH,KAAK,CAACM,GAAN,EAAb;MACA,IAAI,CAACH,IAAL,EAAW,OAAON,QAAQ,EAAf;MACXH,MAAM,CAACA,MAAP,CAAcS,IAAd,EAAoB,UAAAJ,GAAG,EAAI;QACzB,IAAIA,GAAJ,EAAS,OAAOF,QAAQ,CAACE,GAAD,CAAf;QACTM,UAAU;MACX,CAHD;IAID;EACF,CAfD;AAgBD,CAlBiB,CAAlB;;AAoBA,SAASE,YAAT,CAAuBX,GAAvB,EAA4B;EAC1B,IAAII,KAAJ;;EACA,IAAI;IACFA,KAAK,GAAGT,EAAE,CAACiB,WAAH,CAAeZ,GAAf,CAAR;EACD,CAFD,CAEE,gBAAM;IACN,OAAOH,KAAK,CAACgB,UAAN,CAAiBb,GAAjB,CAAP;EACD;;EAEDI,KAAK,CAACU,OAAN,CAAc,UAAAP,IAAI,EAAI;IACpBA,IAAI,GAAGX,IAAI,CAACY,IAAL,CAAUR,GAAV,EAAeO,IAAf,CAAP;IACAT,MAAM,CAACiB,UAAP,CAAkBR,IAAlB;EACD,CAHD;AAID;;AAEDS,MAAM,CAACC,OAAP,GAAiB;EACfN,YAAY,EAAZA,YADe;EAEfO,YAAY,EAAEP,YAFC;EAGfZ,QAAQ,EAARA,QAHe;EAIfoB,QAAQ,EAAEpB;AAJK,CAAjB"},"metadata":{},"sourceType":"script"}