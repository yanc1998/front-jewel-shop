{"ast":null,"code":"'use strict';\n\nvar u = require('universalify').fromCallback;\n\nvar path = require('path');\n\nvar fs = require('graceful-fs');\n\nvar _mkdirs = require('../mkdirs');\n\nvar mkdirs = _mkdirs.mkdirs;\nvar mkdirsSync = _mkdirs.mkdirsSync;\n\nvar _symlinkPaths = require('./symlink-paths');\n\nvar symlinkPaths = _symlinkPaths.symlinkPaths;\nvar symlinkPathsSync = _symlinkPaths.symlinkPathsSync;\n\nvar _symlinkType = require('./symlink-type');\n\nvar symlinkType = _symlinkType.symlinkType;\nvar symlinkTypeSync = _symlinkType.symlinkTypeSync;\n\nvar pathExists = require('../path-exists').pathExists;\n\nfunction createSymlink(srcpath, dstpath, type, callback) {\n  callback = typeof type === 'function' ? type : callback;\n  type = typeof type === 'function' ? false : type;\n  pathExists(dstpath, function (err, destinationExists) {\n    if (err) return callback(err);\n    if (destinationExists) return callback(null);\n    symlinkPaths(srcpath, dstpath, function (err, relative) {\n      if (err) return callback(err);\n      srcpath = relative.toDst;\n      symlinkType(relative.toCwd, type, function (err, type) {\n        if (err) return callback(err);\n        var dir = path.dirname(dstpath);\n        pathExists(dir, function (err, dirExists) {\n          if (err) return callback(err);\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback);\n          mkdirs(dir, function (err) {\n            if (err) return callback(err);\n            fs.symlink(srcpath, dstpath, type, callback);\n          });\n        });\n      });\n    });\n  });\n}\n\nfunction createSymlinkSync(srcpath, dstpath, type) {\n  var destinationExists = fs.existsSync(dstpath);\n  if (destinationExists) return undefined;\n  var relative = symlinkPathsSync(srcpath, dstpath);\n  srcpath = relative.toDst;\n  type = symlinkTypeSync(relative.toCwd, type);\n  var dir = path.dirname(dstpath);\n  var exists = fs.existsSync(dir);\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type);\n  mkdirsSync(dir);\n  return fs.symlinkSync(srcpath, dstpath, type);\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync: createSymlinkSync\n};","map":{"version":3,"names":["u","require","fromCallback","path","fs","_mkdirs","mkdirs","mkdirsSync","_symlinkPaths","symlinkPaths","symlinkPathsSync","_symlinkType","symlinkType","symlinkTypeSync","pathExists","createSymlink","srcpath","dstpath","type","callback","err","destinationExists","relative","toDst","toCwd","dir","dirname","dirExists","symlink","createSymlinkSync","existsSync","undefined","exists","symlinkSync","module","exports"],"sources":["/Users/yancarlos/Documents/my Work/front-jewel-shop/node_modules/fs-extra/lib/ensure/symlink.js"],"sourcesContent":["'use strict'\n\nconst u = require('universalify').fromCallback\nconst path = require('path')\nconst fs = require('graceful-fs')\nconst _mkdirs = require('../mkdirs')\nconst mkdirs = _mkdirs.mkdirs\nconst mkdirsSync = _mkdirs.mkdirsSync\n\nconst _symlinkPaths = require('./symlink-paths')\nconst symlinkPaths = _symlinkPaths.symlinkPaths\nconst symlinkPathsSync = _symlinkPaths.symlinkPathsSync\n\nconst _symlinkType = require('./symlink-type')\nconst symlinkType = _symlinkType.symlinkType\nconst symlinkTypeSync = _symlinkType.symlinkTypeSync\n\nconst pathExists = require('../path-exists').pathExists\n\nfunction createSymlink (srcpath, dstpath, type, callback) {\n  callback = (typeof type === 'function') ? type : callback\n  type = (typeof type === 'function') ? false : type\n\n  pathExists(dstpath, (err, destinationExists) => {\n    if (err) return callback(err)\n    if (destinationExists) return callback(null)\n    symlinkPaths(srcpath, dstpath, (err, relative) => {\n      if (err) return callback(err)\n      srcpath = relative.toDst\n      symlinkType(relative.toCwd, type, (err, type) => {\n        if (err) return callback(err)\n        const dir = path.dirname(dstpath)\n        pathExists(dir, (err, dirExists) => {\n          if (err) return callback(err)\n          if (dirExists) return fs.symlink(srcpath, dstpath, type, callback)\n          mkdirs(dir, err => {\n            if (err) return callback(err)\n            fs.symlink(srcpath, dstpath, type, callback)\n          })\n        })\n      })\n    })\n  })\n}\n\nfunction createSymlinkSync (srcpath, dstpath, type) {\n  const destinationExists = fs.existsSync(dstpath)\n  if (destinationExists) return undefined\n\n  const relative = symlinkPathsSync(srcpath, dstpath)\n  srcpath = relative.toDst\n  type = symlinkTypeSync(relative.toCwd, type)\n  const dir = path.dirname(dstpath)\n  const exists = fs.existsSync(dir)\n  if (exists) return fs.symlinkSync(srcpath, dstpath, type)\n  mkdirsSync(dir)\n  return fs.symlinkSync(srcpath, dstpath, type)\n}\n\nmodule.exports = {\n  createSymlink: u(createSymlink),\n  createSymlinkSync\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}