{"ast":null,"code":"'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar fs = require('../fs');\n\nvar path = require('path');\n\nvar util = require('util');\n\nfunction getStats(src, dest, opts) {\n  var statFunc = opts.dereference ? function (file) {\n    return fs.stat(file, {\n      bigint: true\n    });\n  } : function (file) {\n    return fs.lstat(file, {\n      bigint: true\n    });\n  };\n  return Promise.all([statFunc(src), statFunc(dest)[\"catch\"](function (err) {\n    if (err.code === 'ENOENT') return null;\n    throw err;\n  })]).then(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        srcStat = _ref2[0],\n        destStat = _ref2[1];\n\n    return {\n      srcStat: srcStat,\n      destStat: destStat\n    };\n  });\n}\n\nfunction getStatsSync(src, dest, opts) {\n  var destStat;\n  var statFunc = opts.dereference ? function (file) {\n    return fs.statSync(file, {\n      bigint: true\n    });\n  } : function (file) {\n    return fs.lstatSync(file, {\n      bigint: true\n    });\n  };\n  var srcStat = statFunc(src);\n\n  try {\n    destStat = statFunc(dest);\n  } catch (err) {\n    if (err.code === 'ENOENT') return {\n      srcStat: srcStat,\n      destStat: null\n    };\n    throw err;\n  }\n\n  return {\n    srcStat: srcStat,\n    destStat: destStat\n  };\n}\n\nfunction checkPaths(src, dest, funcName, opts, cb) {\n  util.callbackify(getStats)(src, dest, opts, function (err, stats) {\n    if (err) return cb(err);\n    var srcStat = stats.srcStat,\n        destStat = stats.destStat;\n\n    if (destStat) {\n      if (areIdentical(srcStat, destStat)) {\n        var srcBaseName = path.basename(src);\n        var destBaseName = path.basename(dest);\n\n        if (funcName === 'move' && srcBaseName !== destBaseName && srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n          return cb(null, {\n            srcStat: srcStat,\n            destStat: destStat,\n            isChangingCase: true\n          });\n        }\n\n        return cb(new Error('Source and destination must not be the same.'));\n      }\n\n      if (srcStat.isDirectory() && !destStat.isDirectory()) {\n        return cb(new Error(\"Cannot overwrite non-directory '\".concat(dest, \"' with directory '\").concat(src, \"'.\")));\n      }\n\n      if (!srcStat.isDirectory() && destStat.isDirectory()) {\n        return cb(new Error(\"Cannot overwrite directory '\".concat(dest, \"' with non-directory '\").concat(src, \"'.\")));\n      }\n    }\n\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)));\n    }\n\n    return cb(null, {\n      srcStat: srcStat,\n      destStat: destStat\n    });\n  });\n}\n\nfunction checkPathsSync(src, dest, funcName, opts) {\n  var _getStatsSync = getStatsSync(src, dest, opts),\n      srcStat = _getStatsSync.srcStat,\n      destStat = _getStatsSync.destStat;\n\n  if (destStat) {\n    if (areIdentical(srcStat, destStat)) {\n      var srcBaseName = path.basename(src);\n      var destBaseName = path.basename(dest);\n\n      if (funcName === 'move' && srcBaseName !== destBaseName && srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n        return {\n          srcStat: srcStat,\n          destStat: destStat,\n          isChangingCase: true\n        };\n      }\n\n      throw new Error('Source and destination must not be the same.');\n    }\n\n    if (srcStat.isDirectory() && !destStat.isDirectory()) {\n      throw new Error(\"Cannot overwrite non-directory '\".concat(dest, \"' with directory '\").concat(src, \"'.\"));\n    }\n\n    if (!srcStat.isDirectory() && destStat.isDirectory()) {\n      throw new Error(\"Cannot overwrite directory '\".concat(dest, \"' with non-directory '\").concat(src, \"'.\"));\n    }\n  }\n\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName));\n  }\n\n  return {\n    srcStat: srcStat,\n    destStat: destStat\n  };\n} // recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\n\n\nfunction checkParentPaths(src, srcStat, dest, funcName, cb) {\n  var srcParent = path.resolve(path.dirname(src));\n  var destParent = path.resolve(path.dirname(dest));\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb();\n  fs.stat(destParent, {\n    bigint: true\n  }, function (err, destStat) {\n    if (err) {\n      if (err.code === 'ENOENT') return cb();\n      return cb(err);\n    }\n\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)));\n    }\n\n    return checkParentPaths(src, srcStat, destParent, funcName, cb);\n  });\n}\n\nfunction checkParentPathsSync(src, srcStat, dest, funcName) {\n  var srcParent = path.resolve(path.dirname(src));\n  var destParent = path.resolve(path.dirname(dest));\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return;\n  var destStat;\n\n  try {\n    destStat = fs.statSync(destParent, {\n      bigint: true\n    });\n  } catch (err) {\n    if (err.code === 'ENOENT') return;\n    throw err;\n  }\n\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName));\n  }\n\n  return checkParentPathsSync(src, srcStat, destParent, funcName);\n}\n\nfunction areIdentical(srcStat, destStat) {\n  return destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev;\n} // return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\n\n\nfunction isSrcSubdir(src, dest) {\n  var srcArr = path.resolve(src).split(path.sep).filter(function (i) {\n    return i;\n  });\n  var destArr = path.resolve(dest).split(path.sep).filter(function (i) {\n    return i;\n  });\n  return srcArr.reduce(function (acc, cur, i) {\n    return acc && destArr[i] === cur;\n  }, true);\n}\n\nfunction errMsg(src, dest, funcName) {\n  return \"Cannot \".concat(funcName, \" '\").concat(src, \"' to a subdirectory of itself, '\").concat(dest, \"'.\");\n}\n\nmodule.exports = {\n  checkPaths: checkPaths,\n  checkPathsSync: checkPathsSync,\n  checkParentPaths: checkParentPaths,\n  checkParentPathsSync: checkParentPathsSync,\n  isSrcSubdir: isSrcSubdir,\n  areIdentical: areIdentical\n};","map":{"version":3,"names":["fs","require","path","util","getStats","src","dest","opts","statFunc","dereference","file","stat","bigint","lstat","Promise","all","err","code","then","srcStat","destStat","getStatsSync","statSync","lstatSync","checkPaths","funcName","cb","callbackify","stats","areIdentical","srcBaseName","basename","destBaseName","toLowerCase","isChangingCase","Error","isDirectory","isSrcSubdir","errMsg","checkPathsSync","checkParentPaths","srcParent","resolve","dirname","destParent","parse","root","checkParentPathsSync","ino","dev","srcArr","split","sep","filter","i","destArr","reduce","acc","cur","module","exports"],"sources":["/Users/yancarlos/Documents/my Work/front-jewel-shop/node_modules/fs-extra/lib/util/stat.js"],"sourcesContent":["'use strict'\n\nconst fs = require('../fs')\nconst path = require('path')\nconst util = require('util')\n\nfunction getStats (src, dest, opts) {\n  const statFunc = opts.dereference\n    ? (file) => fs.stat(file, { bigint: true })\n    : (file) => fs.lstat(file, { bigint: true })\n  return Promise.all([\n    statFunc(src),\n    statFunc(dest).catch(err => {\n      if (err.code === 'ENOENT') return null\n      throw err\n    })\n  ]).then(([srcStat, destStat]) => ({ srcStat, destStat }))\n}\n\nfunction getStatsSync (src, dest, opts) {\n  let destStat\n  const statFunc = opts.dereference\n    ? (file) => fs.statSync(file, { bigint: true })\n    : (file) => fs.lstatSync(file, { bigint: true })\n  const srcStat = statFunc(src)\n  try {\n    destStat = statFunc(dest)\n  } catch (err) {\n    if (err.code === 'ENOENT') return { srcStat, destStat: null }\n    throw err\n  }\n  return { srcStat, destStat }\n}\n\nfunction checkPaths (src, dest, funcName, opts, cb) {\n  util.callbackify(getStats)(src, dest, opts, (err, stats) => {\n    if (err) return cb(err)\n    const { srcStat, destStat } = stats\n\n    if (destStat) {\n      if (areIdentical(srcStat, destStat)) {\n        const srcBaseName = path.basename(src)\n        const destBaseName = path.basename(dest)\n        if (funcName === 'move' &&\n          srcBaseName !== destBaseName &&\n          srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n          return cb(null, { srcStat, destStat, isChangingCase: true })\n        }\n        return cb(new Error('Source and destination must not be the same.'))\n      }\n      if (srcStat.isDirectory() && !destStat.isDirectory()) {\n        return cb(new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`))\n      }\n      if (!srcStat.isDirectory() && destStat.isDirectory()) {\n        return cb(new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`))\n      }\n    }\n\n    if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return cb(null, { srcStat, destStat })\n  })\n}\n\nfunction checkPathsSync (src, dest, funcName, opts) {\n  const { srcStat, destStat } = getStatsSync(src, dest, opts)\n\n  if (destStat) {\n    if (areIdentical(srcStat, destStat)) {\n      const srcBaseName = path.basename(src)\n      const destBaseName = path.basename(dest)\n      if (funcName === 'move' &&\n        srcBaseName !== destBaseName &&\n        srcBaseName.toLowerCase() === destBaseName.toLowerCase()) {\n        return { srcStat, destStat, isChangingCase: true }\n      }\n      throw new Error('Source and destination must not be the same.')\n    }\n    if (srcStat.isDirectory() && !destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite non-directory '${dest}' with directory '${src}'.`)\n    }\n    if (!srcStat.isDirectory() && destStat.isDirectory()) {\n      throw new Error(`Cannot overwrite directory '${dest}' with non-directory '${src}'.`)\n    }\n  }\n\n  if (srcStat.isDirectory() && isSrcSubdir(src, dest)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return { srcStat, destStat }\n}\n\n// recursively check if dest parent is a subdirectory of src.\n// It works for all file types including symlinks since it\n// checks the src and dest inodes. It starts from the deepest\n// parent and stops once it reaches the src parent or the root path.\nfunction checkParentPaths (src, srcStat, dest, funcName, cb) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return cb()\n  fs.stat(destParent, { bigint: true }, (err, destStat) => {\n    if (err) {\n      if (err.code === 'ENOENT') return cb()\n      return cb(err)\n    }\n    if (areIdentical(srcStat, destStat)) {\n      return cb(new Error(errMsg(src, dest, funcName)))\n    }\n    return checkParentPaths(src, srcStat, destParent, funcName, cb)\n  })\n}\n\nfunction checkParentPathsSync (src, srcStat, dest, funcName) {\n  const srcParent = path.resolve(path.dirname(src))\n  const destParent = path.resolve(path.dirname(dest))\n  if (destParent === srcParent || destParent === path.parse(destParent).root) return\n  let destStat\n  try {\n    destStat = fs.statSync(destParent, { bigint: true })\n  } catch (err) {\n    if (err.code === 'ENOENT') return\n    throw err\n  }\n  if (areIdentical(srcStat, destStat)) {\n    throw new Error(errMsg(src, dest, funcName))\n  }\n  return checkParentPathsSync(src, srcStat, destParent, funcName)\n}\n\nfunction areIdentical (srcStat, destStat) {\n  return destStat.ino && destStat.dev && destStat.ino === srcStat.ino && destStat.dev === srcStat.dev\n}\n\n// return true if dest is a subdir of src, otherwise false.\n// It only checks the path strings.\nfunction isSrcSubdir (src, dest) {\n  const srcArr = path.resolve(src).split(path.sep).filter(i => i)\n  const destArr = path.resolve(dest).split(path.sep).filter(i => i)\n  return srcArr.reduce((acc, cur, i) => acc && destArr[i] === cur, true)\n}\n\nfunction errMsg (src, dest, funcName) {\n  return `Cannot ${funcName} '${src}' to a subdirectory of itself, '${dest}'.`\n}\n\nmodule.exports = {\n  checkPaths,\n  checkPathsSync,\n  checkParentPaths,\n  checkParentPathsSync,\n  isSrcSubdir,\n  areIdentical\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}