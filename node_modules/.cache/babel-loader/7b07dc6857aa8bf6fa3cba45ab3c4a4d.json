{"ast":null,"code":"function ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nimport { Vue } from '../../../vue';\nimport { EVENT_NAME_ROW_CLICKED, EVENT_NAME_ROW_HOVERED, EVENT_NAME_ROW_UNHOVERED } from '../../../constants/events';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_OBJECT_FUNCTION } from '../../../constants/props';\nimport { SLOT_NAME_ROW_DETAILS } from '../../../constants/slots';\nimport { get } from '../../../utils/get';\nimport { isFunction, isString, isUndefinedOrNull } from '../../../utils/inspect';\nimport { makeProp } from '../../../utils/props';\nimport { toString } from '../../../utils/string';\nimport { BTr } from '../tr';\nimport { BTd } from '../td';\nimport { BTh } from '../th';\nimport { FIELD_KEY_CELL_VARIANT, FIELD_KEY_ROW_VARIANT, FIELD_KEY_SHOW_DETAILS } from './constants'; // --- Props ---\n\nexport var props = {\n  detailsTdClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tbodyTrAttr: makeProp(PROP_TYPE_OBJECT_FUNCTION),\n  tbodyTrClass: makeProp([].concat(_toConsumableArray(PROP_TYPE_ARRAY_OBJECT_STRING), [PROP_TYPE_FUNCTION]))\n}; // --- Mixin ---\n// @vue/component\n\nexport var tbodyRowMixin = Vue.extend({\n  props: props,\n  methods: {\n    // Methods for computing classes, attributes and styles for table cells\n    getTdValues: function getTdValues(item, key, tdValue, defaultValue) {\n      var $parent = this.$parent;\n\n      if (tdValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(tdValue)) {\n          return tdValue(value, key, item);\n        } else if (isString(tdValue) && isFunction($parent[tdValue])) {\n          return $parent[tdValue](value, key, item);\n        }\n\n        return tdValue;\n      }\n\n      return defaultValue;\n    },\n    getThValues: function getThValues(item, key, thValue, type, defaultValue) {\n      var $parent = this.$parent;\n\n      if (thValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(thValue)) {\n          return thValue(value, key, item, type);\n        } else if (isString(thValue) && isFunction($parent[thValue])) {\n          return $parent[thValue](value, key, item, type);\n        }\n\n        return thValue;\n      }\n\n      return defaultValue;\n    },\n    // Method to get the value for a field\n    getFormattedValue: function getFormattedValue(item, field) {\n      var key = field.key;\n      var formatter = this.getFieldFormatter(key);\n      var value = get(item, key, null);\n\n      if (isFunction(formatter)) {\n        value = formatter(value, key, item);\n      }\n\n      return isUndefinedOrNull(value) ? '' : value;\n    },\n    // Factory function methods\n    toggleDetailsFactory: function toggleDetailsFactory(hasDetailsSlot, item) {\n      var _this = this; // Returns a function to toggle a row's details slot\n\n\n      return function () {\n        if (hasDetailsSlot) {\n          _this.$set(item, FIELD_KEY_SHOW_DETAILS, !item[FIELD_KEY_SHOW_DETAILS]);\n        }\n      };\n    },\n    // Row event handlers\n    rowHovered: function rowHovered(event) {\n      // `mouseenter` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_HOVERED, event);\n      }\n    },\n    rowUnhovered: function rowUnhovered(event) {\n      // `mouseleave` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_UNHOVERED, event);\n      }\n    },\n    // Renders a TD or TH for a row's field\n    renderTbodyRowCell: function renderTbodyRowCell(field, colIndex, item, rowIndex) {\n      var _this2 = this;\n\n      var isStacked = this.isStacked;\n      var key = field.key,\n          label = field.label,\n          isRowHeader = field.isRowHeader;\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var formatted = this.getFormattedValue(item, field);\n      var stickyColumn = !isStacked && (this.isResponsive || this.stickyHeader) && field.stickyColumn; // We only uses the helper components for sticky columns to\n      // improve performance of BTable/BTableLite by reducing the\n      // total number of vue instances created during render\n\n      var cellTag = stickyColumn ? isRowHeader ? BTh : BTd : isRowHeader ? 'th' : 'td';\n      var cellVariant = item[FIELD_KEY_CELL_VARIANT] && item[FIELD_KEY_CELL_VARIANT][key] ? item[FIELD_KEY_CELL_VARIANT][key] : field.variant || null;\n      var data = {\n        // For the Vue key, we concatenate the column index and\n        // field key (as field keys could be duplicated)\n        // TODO: Although we do prevent duplicate field keys...\n        //   So we could change this to: `row-${rowIndex}-cell-${key}`\n        \"class\": [field[\"class\"] ? field[\"class\"] : '', this.getTdValues(item, key, field.tdClass, '')],\n        props: {},\n        attrs: _objectSpread({\n          'aria-colindex': String(colIndex + 1)\n        }, isRowHeader ? this.getThValues(item, key, field.thAttr, 'row', {}) : this.getTdValues(item, key, field.tdAttr, {})),\n        key: \"row-\".concat(rowIndex, \"-cell-\").concat(colIndex, \"-\").concat(key)\n      };\n\n      if (stickyColumn) {\n        // We are using the helper BTd or BTh\n        data.props = {\n          stackedHeading: isStacked ? label : null,\n          stickyColumn: true,\n          variant: cellVariant\n        };\n      } else {\n        // Using native TD or TH element, so we need to\n        // add in the attributes and variant class\n        data.attrs['data-label'] = isStacked && !isUndefinedOrNull(label) ? toString(label) : null;\n        data.attrs.role = isRowHeader ? 'rowheader' : 'cell';\n        data.attrs.scope = isRowHeader ? 'row' : null; // Add in the variant class\n\n        if (cellVariant) {\n          data[\"class\"].push(\"\".concat(this.dark ? 'bg' : 'table', \"-\").concat(cellVariant));\n        }\n      }\n\n      var slotScope = {\n        item: item,\n        index: rowIndex,\n        field: field,\n        unformatted: get(item, key, ''),\n        value: formatted,\n        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),\n        detailsShowing: Boolean(item[FIELD_KEY_SHOW_DETAILS])\n      }; // If table supports selectable mode, then add in the following scope\n      // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n      if (this.supportsSelectableRows) {\n        slotScope.rowSelected = this.isRowSelected(rowIndex);\n\n        slotScope.selectRow = function () {\n          return _this2.selectRow(rowIndex);\n        };\n\n        slotScope.unselectRow = function () {\n          return _this2.unselectRow(rowIndex);\n        };\n      } // The new `v-slot` syntax doesn't like a slot name starting with\n      // a square bracket and if using in-document HTML templates, the\n      // v-slot attributes are lower-cased by the browser.\n      // Switched to round bracket syntax to prevent confusion with\n      // dynamic slot name syntax.\n      // We look for slots in this order: `cell(${key})`, `cell(${key.toLowerCase()})`, 'cell()'\n      // Slot names are now cached by mixin tbody in `this.$_bodyFieldSlotNameCache`\n      // Will be `null` if no slot (or fallback slot) exists\n\n\n      var slotName = this.$_bodyFieldSlotNameCache[key];\n      var $childNodes = slotName ? this.normalizeSlot(slotName, slotScope) : toString(formatted);\n\n      if (this.isStacked) {\n        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!\n        $childNodes = [h('div', [$childNodes])];\n      } // Render either a td or th cell\n\n\n      return h(cellTag, data, [$childNodes]);\n    },\n    // Renders an item's row (or rows if details supported)\n    renderTbodyRow: function renderTbodyRow(item, rowIndex) {\n      var _this3 = this;\n\n      var fields = this.computedFields,\n          striped = this.striped,\n          primaryKey = this.primaryKey,\n          currentPage = this.currentPage,\n          perPage = this.perPage,\n          tbodyTrClass = this.tbodyTrClass,\n          tbodyTrAttr = this.tbodyTrAttr;\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var rowShowDetails = item[FIELD_KEY_SHOW_DETAILS] && hasDetailsSlot;\n      var hasRowClickHandler = this.$listeners[EVENT_NAME_ROW_CLICKED] || this.hasSelectableRowClick; // We can return more than one TR if rowDetails enabled\n\n      var $rows = []; // Details ID needed for `aria-details` when details showing\n      // We set it to `null` when not showing so that attribute\n      // does not appear on the element\n\n      var detailsId = rowShowDetails ? this.safeId(\"_details_\".concat(rowIndex, \"_\")) : null; // For each item data field in row\n\n      var $tds = fields.map(function (field, colIndex) {\n        return _this3.renderTbodyRowCell(field, colIndex, item, rowIndex);\n      }); // Calculate the row number in the dataset (indexed from 1)\n\n      var ariaRowIndex = null;\n\n      if (currentPage && perPage && perPage > 0) {\n        ariaRowIndex = String((currentPage - 1) * perPage + rowIndex + 1);\n      } // Create a unique :key to help ensure that sub components are re-rendered rather than\n      // re-used, which can cause issues. If a primary key is not provided we use the rendered\n      // rows index within the tbody.\n      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410\n\n\n      var primaryKeyValue = toString(get(item, primaryKey)) || null;\n      var rowKey = primaryKeyValue || toString(rowIndex); // If primary key is provided, use it to generate a unique ID on each tbody > tr\n      // In the format of '{tableId}__row_{primaryKeyValue}'\n\n      var rowId = primaryKeyValue ? this.safeId(\"_row_\".concat(primaryKeyValue)) : null; // Selectable classes and attributes\n\n      var selectableClasses = this.selectableRowClasses ? this.selectableRowClasses(rowIndex) : {};\n      var selectableAttrs = this.selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}; // Additional classes and attributes\n\n      var userTrClasses = isFunction(tbodyTrClass) ? tbodyTrClass(item, 'row') : tbodyTrClass;\n      var userTrAttrs = isFunction(tbodyTrAttr) ?\n      /* istanbul ignore next */\n      tbodyTrAttr(item, 'row') : tbodyTrAttr; // Add the item row\n\n      $rows.push(h(BTr, {\n        \"class\": [userTrClasses, selectableClasses, rowShowDetails ? 'b-table-has-details' : ''],\n        props: {\n          variant: item[FIELD_KEY_ROW_VARIANT] || null\n        },\n        attrs: _objectSpread(_objectSpread({\n          id: rowId\n        }, userTrAttrs), {}, {\n          // Users cannot override the following attributes\n          tabindex: hasRowClickHandler ? '0' : null,\n          'data-pk': primaryKeyValue || null,\n          'aria-details': detailsId,\n          'aria-owns': detailsId,\n          'aria-rowindex': ariaRowIndex\n        }, selectableAttrs),\n        on: {\n          // Note: These events are not A11Y friendly!\n          mouseenter: this.rowHovered,\n          mouseleave: this.rowUnhovered\n        },\n        key: \"__b-table-row-\".concat(rowKey, \"__\"),\n        ref: 'item-rows',\n        refInFor: true\n      }, $tds)); // Row Details slot\n\n      if (rowShowDetails) {\n        var detailsScope = {\n          item: item,\n          index: rowIndex,\n          fields: fields,\n          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item)\n        }; // If table supports selectable mode, then add in the following scope\n        // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n        if (this.supportsSelectableRows) {\n          detailsScope.rowSelected = this.isRowSelected(rowIndex);\n\n          detailsScope.selectRow = function () {\n            return _this3.selectRow(rowIndex);\n          };\n\n          detailsScope.unselectRow = function () {\n            return _this3.unselectRow(rowIndex);\n          };\n        } // Render the details slot in a TD\n\n\n        var $details = h(BTd, {\n          props: {\n            colspan: fields.length\n          },\n          \"class\": this.detailsTdClass\n        }, [this.normalizeSlot(SLOT_NAME_ROW_DETAILS, detailsScope)]); // Add a hidden row to keep table row striping consistent when details showing\n        // Only added if the table is striped\n\n        if (striped) {\n          $rows.push( // We don't use `BTr` here as we don't need the extra functionality\n          h('tr', {\n            staticClass: 'd-none',\n            attrs: {\n              'aria-hidden': 'true',\n              role: 'presentation'\n            },\n            key: \"__b-table-details-stripe__\".concat(rowKey)\n          }));\n        } // Add the actual details row\n\n\n        var userDetailsTrClasses = isFunction(this.tbodyTrClass) ?\n        /* istanbul ignore next */\n        this.tbodyTrClass(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrClass;\n        var userDetailsTrAttrs = isFunction(this.tbodyTrAttr) ?\n        /* istanbul ignore next */\n        this.tbodyTrAttr(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrAttr;\n        $rows.push(h(BTr, {\n          staticClass: 'b-table-details',\n          \"class\": [userDetailsTrClasses],\n          props: {\n            variant: item[FIELD_KEY_ROW_VARIANT] || null\n          },\n          attrs: _objectSpread(_objectSpread({}, userDetailsTrAttrs), {}, {\n            // Users cannot override the following attributes\n            id: detailsId,\n            tabindex: '-1'\n          }),\n          key: \"__b-table-details__\".concat(rowKey)\n        }, [$details]));\n      } else if (hasDetailsSlot) {\n        // Only add the placeholder if a the table has a row-details slot defined (but not shown)\n        $rows.push(h());\n\n        if (striped) {\n          // Add extra placeholder if table is striped\n          $rows.push(h());\n        }\n      } // Return the row(s)\n\n\n      return $rows;\n    }\n  }\n});","map":{"version":3,"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","arr2","Vue","EVENT_NAME_ROW_CLICKED","EVENT_NAME_ROW_HOVERED","EVENT_NAME_ROW_UNHOVERED","PROP_TYPE_ARRAY_OBJECT_STRING","PROP_TYPE_FUNCTION","PROP_TYPE_OBJECT_FUNCTION","SLOT_NAME_ROW_DETAILS","get","isFunction","isString","isUndefinedOrNull","makeProp","BTr","BTd","BTh","FIELD_KEY_CELL_VARIANT","FIELD_KEY_ROW_VARIANT","FIELD_KEY_SHOW_DETAILS","props","detailsTdClass","tbodyTrAttr","tbodyTrClass","concat","tbodyRowMixin","extend","methods","getTdValues","item","tdValue","defaultValue","$parent","getThValues","thValue","type","getFormattedValue","field","formatter","getFieldFormatter","toggleDetailsFactory","hasDetailsSlot","_this","$set","rowHovered","event","tbodyRowEventStopped","emitTbodyRowEvent","rowUnhovered","renderTbodyRowCell","colIndex","rowIndex","_this2","isStacked","label","isRowHeader","h","$createElement","hasNormalizedSlot","formatted","stickyColumn","isResponsive","stickyHeader","cellTag","cellVariant","variant","data","tdClass","attrs","String","thAttr","tdAttr","stackedHeading","role","scope","dark","slotScope","index","unformatted","toggleDetails","detailsShowing","Boolean","supportsSelectableRows","rowSelected","isRowSelected","selectRow","unselectRow","slotName","$_bodyFieldSlotNameCache","$childNodes","normalizeSlot","renderTbodyRow","_this3","fields","computedFields","striped","primaryKey","currentPage","perPage","rowShowDetails","hasRowClickHandler","$listeners","hasSelectableRowClick","$rows","detailsId","safeId","$tds","map","ariaRowIndex","primaryKeyValue","rowKey","rowId","selectableClasses","selectableRowClasses","selectableAttrs","selectableRowAttrs","userTrClasses","userTrAttrs","id","tabindex","on","mouseenter","mouseleave","ref","refInFor","detailsScope","$details","colspan","staticClass","userDetailsTrClasses","userDetailsTrAttrs"],"sources":["/Users/yancarlos/Documents/my Work/front-jewel-shop/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-tbody-row.js"],"sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport { Vue } from '../../../vue';\nimport { EVENT_NAME_ROW_CLICKED, EVENT_NAME_ROW_HOVERED, EVENT_NAME_ROW_UNHOVERED } from '../../../constants/events';\nimport { PROP_TYPE_ARRAY_OBJECT_STRING, PROP_TYPE_FUNCTION, PROP_TYPE_OBJECT_FUNCTION } from '../../../constants/props';\nimport { SLOT_NAME_ROW_DETAILS } from '../../../constants/slots';\nimport { get } from '../../../utils/get';\nimport { isFunction, isString, isUndefinedOrNull } from '../../../utils/inspect';\nimport { makeProp } from '../../../utils/props';\nimport { toString } from '../../../utils/string';\nimport { BTr } from '../tr';\nimport { BTd } from '../td';\nimport { BTh } from '../th';\nimport { FIELD_KEY_CELL_VARIANT, FIELD_KEY_ROW_VARIANT, FIELD_KEY_SHOW_DETAILS } from './constants'; // --- Props ---\n\nexport var props = {\n  detailsTdClass: makeProp(PROP_TYPE_ARRAY_OBJECT_STRING),\n  tbodyTrAttr: makeProp(PROP_TYPE_OBJECT_FUNCTION),\n  tbodyTrClass: makeProp([].concat(_toConsumableArray(PROP_TYPE_ARRAY_OBJECT_STRING), [PROP_TYPE_FUNCTION]))\n}; // --- Mixin ---\n// @vue/component\n\nexport var tbodyRowMixin = Vue.extend({\n  props: props,\n  methods: {\n    // Methods for computing classes, attributes and styles for table cells\n    getTdValues: function getTdValues(item, key, tdValue, defaultValue) {\n      var $parent = this.$parent;\n\n      if (tdValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(tdValue)) {\n          return tdValue(value, key, item);\n        } else if (isString(tdValue) && isFunction($parent[tdValue])) {\n          return $parent[tdValue](value, key, item);\n        }\n\n        return tdValue;\n      }\n\n      return defaultValue;\n    },\n    getThValues: function getThValues(item, key, thValue, type, defaultValue) {\n      var $parent = this.$parent;\n\n      if (thValue) {\n        var value = get(item, key, '');\n\n        if (isFunction(thValue)) {\n          return thValue(value, key, item, type);\n        } else if (isString(thValue) && isFunction($parent[thValue])) {\n          return $parent[thValue](value, key, item, type);\n        }\n\n        return thValue;\n      }\n\n      return defaultValue;\n    },\n    // Method to get the value for a field\n    getFormattedValue: function getFormattedValue(item, field) {\n      var key = field.key;\n      var formatter = this.getFieldFormatter(key);\n      var value = get(item, key, null);\n\n      if (isFunction(formatter)) {\n        value = formatter(value, key, item);\n      }\n\n      return isUndefinedOrNull(value) ? '' : value;\n    },\n    // Factory function methods\n    toggleDetailsFactory: function toggleDetailsFactory(hasDetailsSlot, item) {\n      var _this = this;\n\n      // Returns a function to toggle a row's details slot\n      return function () {\n        if (hasDetailsSlot) {\n          _this.$set(item, FIELD_KEY_SHOW_DETAILS, !item[FIELD_KEY_SHOW_DETAILS]);\n        }\n      };\n    },\n    // Row event handlers\n    rowHovered: function rowHovered(event) {\n      // `mouseenter` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_HOVERED, event);\n      }\n    },\n    rowUnhovered: function rowUnhovered(event) {\n      // `mouseleave` handler (non-bubbling)\n      // `this.tbodyRowEventStopped` from tbody mixin\n      if (!this.tbodyRowEventStopped(event)) {\n        // `this.emitTbodyRowEvent` from tbody mixin\n        this.emitTbodyRowEvent(EVENT_NAME_ROW_UNHOVERED, event);\n      }\n    },\n    // Renders a TD or TH for a row's field\n    renderTbodyRowCell: function renderTbodyRowCell(field, colIndex, item, rowIndex) {\n      var _this2 = this;\n\n      var isStacked = this.isStacked;\n      var key = field.key,\n          label = field.label,\n          isRowHeader = field.isRowHeader;\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var formatted = this.getFormattedValue(item, field);\n      var stickyColumn = !isStacked && (this.isResponsive || this.stickyHeader) && field.stickyColumn; // We only uses the helper components for sticky columns to\n      // improve performance of BTable/BTableLite by reducing the\n      // total number of vue instances created during render\n\n      var cellTag = stickyColumn ? isRowHeader ? BTh : BTd : isRowHeader ? 'th' : 'td';\n      var cellVariant = item[FIELD_KEY_CELL_VARIANT] && item[FIELD_KEY_CELL_VARIANT][key] ? item[FIELD_KEY_CELL_VARIANT][key] : field.variant || null;\n      var data = {\n        // For the Vue key, we concatenate the column index and\n        // field key (as field keys could be duplicated)\n        // TODO: Although we do prevent duplicate field keys...\n        //   So we could change this to: `row-${rowIndex}-cell-${key}`\n        class: [field.class ? field.class : '', this.getTdValues(item, key, field.tdClass, '')],\n        props: {},\n        attrs: _objectSpread({\n          'aria-colindex': String(colIndex + 1)\n        }, isRowHeader ? this.getThValues(item, key, field.thAttr, 'row', {}) : this.getTdValues(item, key, field.tdAttr, {})),\n        key: \"row-\".concat(rowIndex, \"-cell-\").concat(colIndex, \"-\").concat(key)\n      };\n\n      if (stickyColumn) {\n        // We are using the helper BTd or BTh\n        data.props = {\n          stackedHeading: isStacked ? label : null,\n          stickyColumn: true,\n          variant: cellVariant\n        };\n      } else {\n        // Using native TD or TH element, so we need to\n        // add in the attributes and variant class\n        data.attrs['data-label'] = isStacked && !isUndefinedOrNull(label) ? toString(label) : null;\n        data.attrs.role = isRowHeader ? 'rowheader' : 'cell';\n        data.attrs.scope = isRowHeader ? 'row' : null; // Add in the variant class\n\n        if (cellVariant) {\n          data.class.push(\"\".concat(this.dark ? 'bg' : 'table', \"-\").concat(cellVariant));\n        }\n      }\n\n      var slotScope = {\n        item: item,\n        index: rowIndex,\n        field: field,\n        unformatted: get(item, key, ''),\n        value: formatted,\n        toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item),\n        detailsShowing: Boolean(item[FIELD_KEY_SHOW_DETAILS])\n      }; // If table supports selectable mode, then add in the following scope\n      // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n      if (this.supportsSelectableRows) {\n        slotScope.rowSelected = this.isRowSelected(rowIndex);\n\n        slotScope.selectRow = function () {\n          return _this2.selectRow(rowIndex);\n        };\n\n        slotScope.unselectRow = function () {\n          return _this2.unselectRow(rowIndex);\n        };\n      } // The new `v-slot` syntax doesn't like a slot name starting with\n      // a square bracket and if using in-document HTML templates, the\n      // v-slot attributes are lower-cased by the browser.\n      // Switched to round bracket syntax to prevent confusion with\n      // dynamic slot name syntax.\n      // We look for slots in this order: `cell(${key})`, `cell(${key.toLowerCase()})`, 'cell()'\n      // Slot names are now cached by mixin tbody in `this.$_bodyFieldSlotNameCache`\n      // Will be `null` if no slot (or fallback slot) exists\n\n\n      var slotName = this.$_bodyFieldSlotNameCache[key];\n      var $childNodes = slotName ? this.normalizeSlot(slotName, slotScope) : toString(formatted);\n\n      if (this.isStacked) {\n        // We wrap in a DIV to ensure rendered as a single cell when visually stacked!\n        $childNodes = [h('div', [$childNodes])];\n      } // Render either a td or th cell\n\n\n      return h(cellTag, data, [$childNodes]);\n    },\n    // Renders an item's row (or rows if details supported)\n    renderTbodyRow: function renderTbodyRow(item, rowIndex) {\n      var _this3 = this;\n\n      var fields = this.computedFields,\n          striped = this.striped,\n          primaryKey = this.primaryKey,\n          currentPage = this.currentPage,\n          perPage = this.perPage,\n          tbodyTrClass = this.tbodyTrClass,\n          tbodyTrAttr = this.tbodyTrAttr;\n      var h = this.$createElement;\n      var hasDetailsSlot = this.hasNormalizedSlot(SLOT_NAME_ROW_DETAILS);\n      var rowShowDetails = item[FIELD_KEY_SHOW_DETAILS] && hasDetailsSlot;\n      var hasRowClickHandler = this.$listeners[EVENT_NAME_ROW_CLICKED] || this.hasSelectableRowClick; // We can return more than one TR if rowDetails enabled\n\n      var $rows = []; // Details ID needed for `aria-details` when details showing\n      // We set it to `null` when not showing so that attribute\n      // does not appear on the element\n\n      var detailsId = rowShowDetails ? this.safeId(\"_details_\".concat(rowIndex, \"_\")) : null; // For each item data field in row\n\n      var $tds = fields.map(function (field, colIndex) {\n        return _this3.renderTbodyRowCell(field, colIndex, item, rowIndex);\n      }); // Calculate the row number in the dataset (indexed from 1)\n\n      var ariaRowIndex = null;\n\n      if (currentPage && perPage && perPage > 0) {\n        ariaRowIndex = String((currentPage - 1) * perPage + rowIndex + 1);\n      } // Create a unique :key to help ensure that sub components are re-rendered rather than\n      // re-used, which can cause issues. If a primary key is not provided we use the rendered\n      // rows index within the tbody.\n      // See: https://github.com/bootstrap-vue/bootstrap-vue/issues/2410\n\n\n      var primaryKeyValue = toString(get(item, primaryKey)) || null;\n      var rowKey = primaryKeyValue || toString(rowIndex); // If primary key is provided, use it to generate a unique ID on each tbody > tr\n      // In the format of '{tableId}__row_{primaryKeyValue}'\n\n      var rowId = primaryKeyValue ? this.safeId(\"_row_\".concat(primaryKeyValue)) : null; // Selectable classes and attributes\n\n      var selectableClasses = this.selectableRowClasses ? this.selectableRowClasses(rowIndex) : {};\n      var selectableAttrs = this.selectableRowAttrs ? this.selectableRowAttrs(rowIndex) : {}; // Additional classes and attributes\n\n      var userTrClasses = isFunction(tbodyTrClass) ? tbodyTrClass(item, 'row') : tbodyTrClass;\n      var userTrAttrs = isFunction(tbodyTrAttr) ?\n      /* istanbul ignore next */\n      tbodyTrAttr(item, 'row') : tbodyTrAttr; // Add the item row\n\n      $rows.push(h(BTr, {\n        class: [userTrClasses, selectableClasses, rowShowDetails ? 'b-table-has-details' : ''],\n        props: {\n          variant: item[FIELD_KEY_ROW_VARIANT] || null\n        },\n        attrs: _objectSpread(_objectSpread({\n          id: rowId\n        }, userTrAttrs), {}, {\n          // Users cannot override the following attributes\n          tabindex: hasRowClickHandler ? '0' : null,\n          'data-pk': primaryKeyValue || null,\n          'aria-details': detailsId,\n          'aria-owns': detailsId,\n          'aria-rowindex': ariaRowIndex\n        }, selectableAttrs),\n        on: {\n          // Note: These events are not A11Y friendly!\n          mouseenter: this.rowHovered,\n          mouseleave: this.rowUnhovered\n        },\n        key: \"__b-table-row-\".concat(rowKey, \"__\"),\n        ref: 'item-rows',\n        refInFor: true\n      }, $tds)); // Row Details slot\n\n      if (rowShowDetails) {\n        var detailsScope = {\n          item: item,\n          index: rowIndex,\n          fields: fields,\n          toggleDetails: this.toggleDetailsFactory(hasDetailsSlot, item)\n        }; // If table supports selectable mode, then add in the following scope\n        // this.supportsSelectableRows will be undefined if mixin isn't loaded\n\n        if (this.supportsSelectableRows) {\n          detailsScope.rowSelected = this.isRowSelected(rowIndex);\n\n          detailsScope.selectRow = function () {\n            return _this3.selectRow(rowIndex);\n          };\n\n          detailsScope.unselectRow = function () {\n            return _this3.unselectRow(rowIndex);\n          };\n        } // Render the details slot in a TD\n\n\n        var $details = h(BTd, {\n          props: {\n            colspan: fields.length\n          },\n          class: this.detailsTdClass\n        }, [this.normalizeSlot(SLOT_NAME_ROW_DETAILS, detailsScope)]); // Add a hidden row to keep table row striping consistent when details showing\n        // Only added if the table is striped\n\n        if (striped) {\n          $rows.push( // We don't use `BTr` here as we don't need the extra functionality\n          h('tr', {\n            staticClass: 'd-none',\n            attrs: {\n              'aria-hidden': 'true',\n              role: 'presentation'\n            },\n            key: \"__b-table-details-stripe__\".concat(rowKey)\n          }));\n        } // Add the actual details row\n\n\n        var userDetailsTrClasses = isFunction(this.tbodyTrClass) ?\n        /* istanbul ignore next */\n        this.tbodyTrClass(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrClass;\n        var userDetailsTrAttrs = isFunction(this.tbodyTrAttr) ?\n        /* istanbul ignore next */\n        this.tbodyTrAttr(item, SLOT_NAME_ROW_DETAILS) : this.tbodyTrAttr;\n        $rows.push(h(BTr, {\n          staticClass: 'b-table-details',\n          class: [userDetailsTrClasses],\n          props: {\n            variant: item[FIELD_KEY_ROW_VARIANT] || null\n          },\n          attrs: _objectSpread(_objectSpread({}, userDetailsTrAttrs), {}, {\n            // Users cannot override the following attributes\n            id: detailsId,\n            tabindex: '-1'\n          }),\n          key: \"__b-table-details__\".concat(rowKey)\n        }, [$details]));\n      } else if (hasDetailsSlot) {\n        // Only add the placeholder if a the table has a row-details slot defined (but not shown)\n        $rows.push(h());\n\n        if (striped) {\n          // Add extra placeholder if table is striped\n          $rows.push(h());\n        }\n      } // Return the row(s)\n\n\n      return $rows;\n    }\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}